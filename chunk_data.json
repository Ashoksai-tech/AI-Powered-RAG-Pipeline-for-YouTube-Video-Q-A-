[
  {
    "id": "chunk_001",
    "text": "My goal for today's video is to provide you with no BS extremely simple agentic AI explanation. I'm going to show you some real agentic AI systems along with the code. So please stay with me till the end. We will start with a real life",
    "start_time": "00:00:00.080",
    "end_time": "00:00:17.839",
    "segments": [
      {
        "timestamp": "00:00:00.080 --> 00:00:05.200",
        "text": "My goal for today's video is to provide",
        "start": "00:00:00.080",
        "end": "00:00:05.200"
      },
      {
        "timestamp": "00:00:02.240 --> 00:00:07.759",
        "text": "you with no BS extremely simple agentic",
        "start": "00:00:02.240",
        "end": "00:00:07.759"
      },
      {
        "timestamp": "00:00:05.200 --> 00:00:10.800",
        "text": "AI explanation. I'm going to show you",
        "start": "00:00:05.200",
        "end": "00:00:10.800"
      },
      {
        "timestamp": "00:00:07.759 --> 00:00:12.719",
        "text": "some real agentic AI systems along with",
        "start": "00:00:07.759",
        "end": "00:00:12.719"
      },
      {
        "timestamp": "00:00:10.800 --> 00:00:15.359",
        "text": "the code. So please stay with me till",
        "start": "00:00:10.800",
        "end": "00:00:15.359"
      },
      {
        "timestamp": "00:00:12.718 --> 00:00:17.839",
        "text": "the end. We will start with a real life",
        "start": "00:00:12.718",
        "end": "00:00:17.839"
      }
    ]
  },
  {
    "id": "chunk_002",
    "text": "example of my own company. We have 55 plus people and for these people we want to build an HR assistant which can answer simple questions on policies such as how many vacation days do they have per year or what is the policy on seek",
    "start_time": "00:00:15.359",
    "end_time": "00:00:34.160",
    "segments": [
      {
        "timestamp": "00:00:15.359 --> 00:00:20.719",
        "text": "example of my own company. We have 55",
        "start": "00:00:15.359",
        "end": "00:00:20.719"
      },
      {
        "timestamp": "00:00:17.839 --> 00:00:23.600",
        "text": "plus people and for these people we want",
        "start": "00:00:17.839",
        "end": "00:00:23.600"
      },
      {
        "timestamp": "00:00:20.719 --> 00:00:25.679",
        "text": "to build an HR assistant which can",
        "start": "00:00:20.719",
        "end": "00:00:25.679"
      },
      {
        "timestamp": "00:00:23.600 --> 00:00:27.760",
        "text": "answer simple questions on policies such",
        "start": "00:00:23.600",
        "end": "00:00:27.760"
      },
      {
        "timestamp": "00:00:25.679 --> 00:00:30.399",
        "text": "as how many vacation days do they have",
        "start": "00:00:25.679",
        "end": "00:00:30.399"
      },
      {
        "timestamp": "00:00:27.760 --> 00:00:34.160",
        "text": "per year or what is the policy on seek",
        "start": "00:00:27.760",
        "end": "00:00:34.160"
      }
    ]
  },
  {
    "id": "chunk_003",
    "text": "leave and for this all this policy data you have it available in PDF files you can build a retrieval augmented generation chatboard which can simply pull the information from this PDF and answer these questions.",
    "start_time": "00:00:30.399",
    "end_time": "00:00:50.640",
    "segments": [
      {
        "timestamp": "00:00:30.399 --> 00:00:36.719",
        "text": "leave and for this all this policy data",
        "start": "00:00:30.399",
        "end": "00:00:36.719"
      },
      {
        "timestamp": "00:00:34.159 --> 00:00:39.199",
        "text": "you have it available in PDF files you",
        "start": "00:00:34.159",
        "end": "00:00:39.199"
      },
      {
        "timestamp": "00:00:36.719 --> 00:00:42.640",
        "text": "can build a retrieval augmented",
        "start": "00:00:36.719",
        "end": "00:00:42.640"
      },
      {
        "timestamp": "00:00:39.200 --> 00:00:45.040",
        "text": "generation chatboard which can simply",
        "start": "00:00:39.200",
        "end": "00:00:45.040"
      },
      {
        "timestamp": "00:00:42.640 --> 00:00:46.719",
        "text": "pull the information from this PDF and",
        "start": "00:00:42.640",
        "end": "00:00:46.719"
      },
      {
        "timestamp": "00:00:45.039 --> 00:00:50.640",
        "text": "answer these questions.",
        "start": "00:00:45.039",
        "end": "00:00:50.640"
      }
    ]
  },
  {
    "id": "chunk_004",
    "text": "Now is this an agentic AI? The answer is no. Anthropic has this document on building effective agents and they categorize these AI applications into two categories workflows and agents. This rack based chatboard is actually a",
    "start_time": "00:00:46.719",
    "end_time": "00:01:05.840",
    "segments": [
      {
        "timestamp": "00:00:46.719 --> 00:00:53.679",
        "text": "Now is this an agentic AI? The answer is",
        "start": "00:00:46.719",
        "end": "00:00:53.679"
      },
      {
        "timestamp": "00:00:50.640 --> 00:00:56.159",
        "text": "no. Anthropic has this document on",
        "start": "00:00:50.640",
        "end": "00:00:56.159"
      },
      {
        "timestamp": "00:00:53.679 --> 00:00:58.159",
        "text": "building effective agents and they",
        "start": "00:00:53.679",
        "end": "00:00:58.159"
      },
      {
        "timestamp": "00:00:56.159 --> 00:01:00.718",
        "text": "categorize these AI applications into",
        "start": "00:00:56.159",
        "end": "00:01:00.718"
      },
      {
        "timestamp": "00:00:58.159 --> 00:01:03.038",
        "text": "two categories workflows and agents.",
        "start": "00:00:58.159",
        "end": "00:01:03.038"
      },
      {
        "timestamp": "00:01:00.719 --> 00:01:05.840",
        "text": "This rack based chatboard is actually a",
        "start": "00:01:00.719",
        "end": "00:01:05.840"
      }
    ]
  },
  {
    "id": "chunk_005",
    "text": "workflow. It is not agentic. Let's advance this chatboard a bit more and let's add a support where you can ask question. Okay, how many leaves do I have left? Specifically, you know, as an employee, how many leaves do I have",
    "start_time": "00:01:03.039",
    "end_time": "00:01:22.159",
    "segments": [
      {
        "timestamp": "00:01:03.039 --> 00:01:09.599",
        "text": "workflow. It is not agentic. Let's",
        "start": "00:01:03.039",
        "end": "00:01:09.599"
      },
      {
        "timestamp": "00:01:05.840 --> 00:01:12.320",
        "text": "advance this chatboard a bit more and",
        "start": "00:01:05.840",
        "end": "00:01:12.320"
      },
      {
        "timestamp": "00:01:09.599 --> 00:01:14.478",
        "text": "let's add a support where you can ask",
        "start": "00:01:09.599",
        "end": "00:01:14.478"
      },
      {
        "timestamp": "00:01:12.319 --> 00:01:17.039",
        "text": "question. Okay, how many leaves do I",
        "start": "00:01:12.319",
        "end": "00:01:17.039"
      },
      {
        "timestamp": "00:01:14.478 --> 00:01:19.118",
        "text": "have left? Specifically, you know, as an",
        "start": "00:01:14.478",
        "end": "00:01:19.118"
      },
      {
        "timestamp": "00:01:17.040 --> 00:01:22.159",
        "text": "employee, how many leaves do I have",
        "start": "00:01:17.040",
        "end": "00:01:22.159"
      }
    ]
  },
  {
    "id": "chunk_006",
    "text": "left? You can also apply for the leaves right here. Now, see this is important. This is not just question and answer. You are taking actions. So, here you obviously have access to your policy data via PDF. But on top of that you",
    "start_time": "00:01:19.118",
    "end_time": "00:01:38.400",
    "segments": [
      {
        "timestamp": "00:01:19.118 --> 00:01:24.000",
        "text": "left? You can also apply for the leaves",
        "start": "00:01:19.118",
        "end": "00:01:24.000"
      },
      {
        "timestamp": "00:01:22.159 --> 00:01:25.600",
        "text": "right here. Now, see this is important.",
        "start": "00:01:22.159",
        "end": "00:01:25.600"
      },
      {
        "timestamp": "00:01:24.000 --> 00:01:28.879",
        "text": "This is not just question and answer.",
        "start": "00:01:24.000",
        "end": "00:01:28.879"
      },
      {
        "timestamp": "00:01:25.599 --> 00:01:31.039",
        "text": "You are taking actions. So, here you",
        "start": "00:01:25.599",
        "end": "00:01:31.039"
      },
      {
        "timestamp": "00:01:28.879 --> 00:01:34.239",
        "text": "obviously have access to your policy",
        "start": "00:01:28.879",
        "end": "00:01:34.239"
      },
      {
        "timestamp": "00:01:31.040 --> 00:01:38.400",
        "text": "data via PDF. But on top of that you",
        "start": "00:01:31.040",
        "end": "00:01:38.400"
      }
    ]
  },
  {
    "id": "chunk_007",
    "text": "integrated LLM with HR management system through their APIs where you can not only pull the leaves for a given employee you can also apply for a leave. Okay. So here it will detect your login. It will identify whether you are moan",
    "start_time": "00:01:34.239",
    "end_time": "00:01:55.118",
    "segments": [
      {
        "timestamp": "00:01:34.239 --> 00:01:40.719",
        "text": "integrated LLM with HR management system",
        "start": "00:01:34.239",
        "end": "00:01:40.719"
      },
      {
        "timestamp": "00:01:38.400 --> 00:01:43.280",
        "text": "through their APIs where you can not",
        "start": "00:01:38.400",
        "end": "00:01:43.280"
      },
      {
        "timestamp": "00:01:40.719 --> 00:01:46.399",
        "text": "only pull the leaves for a given",
        "start": "00:01:40.719",
        "end": "00:01:46.399"
      },
      {
        "timestamp": "00:01:43.280 --> 00:01:49.680",
        "text": "employee you can also apply for a leave.",
        "start": "00:01:43.280",
        "end": "00:01:49.680"
      },
      {
        "timestamp": "00:01:46.399 --> 00:01:52.399",
        "text": "Okay. So here it will detect your login.",
        "start": "00:01:46.399",
        "end": "00:01:52.399"
      },
      {
        "timestamp": "00:01:49.680 --> 00:01:55.118",
        "text": "It will identify whether you are moan",
        "start": "00:01:49.680",
        "end": "00:01:55.118"
      }
    ]
  },
  {
    "id": "chunk_008",
    "text": "Sharma or Abdul Kadir whoever you you are and it will take the necessary action. Do we call this agentic AI? Well, the answer is again no. This is tool augmented chatboard. We want to",
    "start_time": "00:01:52.399",
    "end_time": "00:02:12.959",
    "segments": [
      {
        "timestamp": "00:01:52.399 --> 00:01:59.359",
        "text": "Sharma or Abdul Kadir whoever you you",
        "start": "00:01:52.399",
        "end": "00:01:59.359"
      },
      {
        "timestamp": "00:01:55.118 --> 00:02:02.239",
        "text": "are and it will take the necessary",
        "start": "00:01:55.118",
        "end": "00:02:02.239"
      },
      {
        "timestamp": "00:01:59.359 --> 00:02:04.799",
        "text": "action. Do we call this agentic AI?",
        "start": "00:01:59.359",
        "end": "00:02:04.799"
      },
      {
        "timestamp": "00:02:02.239 --> 00:02:09.038",
        "text": "Well, the answer is again no. This is",
        "start": "00:02:02.239",
        "end": "00:02:09.038"
      },
      {
        "timestamp": "00:02:04.799 --> 00:02:12.959",
        "text": "tool augmented chatboard. We want to",
        "start": "00:02:04.799",
        "end": "00:02:12.959"
      }
    ]
  },
  {
    "id": "chunk_009",
    "text": "advance this further and give it a goal such as prepare for Sara's maternity leave. Now, this requires multi-step reasoning and multi-turn planning. Another question, onboard the new intern joining next Monday. Well, this again",
    "start_time": "00:02:09.038",
    "end_time": "00:02:30.239",
    "segments": [
      {
        "timestamp": "00:02:09.038 --> 00:02:16.079",
        "text": "advance this further and give it a goal",
        "start": "00:02:09.038",
        "end": "00:02:16.079"
      },
      {
        "timestamp": "00:02:12.959 --> 00:02:19.120",
        "text": "such as prepare for Sara's maternity",
        "start": "00:02:12.959",
        "end": "00:02:19.120"
      },
      {
        "timestamp": "00:02:16.080 --> 00:02:21.840",
        "text": "leave. Now, this requires multi-step",
        "start": "00:02:16.080",
        "end": "00:02:21.840"
      },
      {
        "timestamp": "00:02:19.120 --> 00:02:24.400",
        "text": "reasoning and multi-turn planning.",
        "start": "00:02:19.120",
        "end": "00:02:24.400"
      },
      {
        "timestamp": "00:02:21.840 --> 00:02:27.280",
        "text": "Another question, onboard the new intern",
        "start": "00:02:21.840",
        "end": "00:02:27.280"
      },
      {
        "timestamp": "00:02:24.400 --> 00:02:30.239",
        "text": "joining next Monday. Well, this again",
        "start": "00:02:24.400",
        "end": "00:02:30.239"
      }
    ]
  },
  {
    "id": "chunk_010",
    "text": "requires multi-step planning. Okay. So, let's call this a broader goal. It is not a simple task. It's a complex task and it requires a multi-step reasoning first of all and then you come up with a",
    "start_time": "00:02:27.280",
    "end_time": "00:02:45.439",
    "segments": [
      {
        "timestamp": "00:02:27.280 --> 00:02:33.120",
        "text": "requires multi-step planning. Okay. So,",
        "start": "00:02:27.280",
        "end": "00:02:33.120"
      },
      {
        "timestamp": "00:02:30.239 --> 00:02:37.120",
        "text": "let's call this a broader goal. It is",
        "start": "00:02:30.239",
        "end": "00:02:37.120"
      },
      {
        "timestamp": "00:02:33.120 --> 00:02:40.400",
        "text": "not a simple task. It's a complex task",
        "start": "00:02:33.120",
        "end": "00:02:40.400"
      },
      {
        "timestamp": "00:02:37.120 --> 00:02:42.560",
        "text": "and it requires a multi-step reasoning",
        "start": "00:02:37.120",
        "end": "00:02:42.560"
      },
      {
        "timestamp": "00:02:40.400 --> 00:02:45.439",
        "text": "first of all and then you come up with a",
        "start": "00:02:40.400",
        "end": "00:02:45.439"
      }
    ]
  },
  {
    "id": "chunk_011",
    "text": "plan that I need to schedule a welcome meeting with this intern and you will actually send the meeting invite via Outlook or whatever uh calendar system that you're using. then you might want to create interns profile in HR",
    "start_time": "00:02:42.560",
    "end_time": "00:03:00.639",
    "segments": [
      {
        "timestamp": "00:02:42.560 --> 00:02:48.560",
        "text": "plan that I need to schedule a welcome",
        "start": "00:02:42.560",
        "end": "00:02:48.560"
      },
      {
        "timestamp": "00:02:45.439 --> 00:02:50.878",
        "text": "meeting with this intern and you will",
        "start": "00:02:45.439",
        "end": "00:02:50.878"
      },
      {
        "timestamp": "00:02:48.560 --> 00:02:53.519",
        "text": "actually send the meeting invite via",
        "start": "00:02:48.560",
        "end": "00:02:53.519"
      },
      {
        "timestamp": "00:02:50.878 --> 00:02:55.759",
        "text": "Outlook or whatever uh calendar system",
        "start": "00:02:50.878",
        "end": "00:02:55.759"
      },
      {
        "timestamp": "00:02:53.519 --> 00:02:58.319",
        "text": "that you're using. then you might want",
        "start": "00:02:53.519",
        "end": "00:02:58.319"
      },
      {
        "timestamp": "00:02:55.759 --> 00:03:00.639",
        "text": "to create interns profile in HR",
        "start": "00:02:55.759",
        "end": "00:03:00.639"
      }
    ]
  },
  {
    "id": "chunk_012",
    "text": "management system. So now you have integration uh through your HR management system APIs where it can go and create interns profile at every step there will be some generation also right because you let's say if you want to",
    "start_time": "00:02:58.318",
    "end_time": "00:03:16.318",
    "segments": [
      {
        "timestamp": "00:02:58.318 --> 00:03:03.518",
        "text": "management system. So now you have",
        "start": "00:02:58.318",
        "end": "00:03:03.518"
      },
      {
        "timestamp": "00:03:00.639 --> 00:03:06.399",
        "text": "integration uh through your HR",
        "start": "00:03:00.639",
        "end": "00:03:06.399"
      },
      {
        "timestamp": "00:03:03.519 --> 00:03:10.640",
        "text": "management system APIs where it can go",
        "start": "00:03:03.519",
        "end": "00:03:10.640"
      },
      {
        "timestamp": "00:03:06.400 --> 00:03:12.640",
        "text": "and create interns profile at every step",
        "start": "00:03:06.400",
        "end": "00:03:12.640"
      },
      {
        "timestamp": "00:03:10.639 --> 00:03:14.639",
        "text": "there will be some generation also right",
        "start": "00:03:10.639",
        "end": "00:03:14.639"
      },
      {
        "timestamp": "00:03:12.639 --> 00:03:16.318",
        "text": "because you let's say if you want to",
        "start": "00:03:12.639",
        "end": "00:03:16.318"
      }
    ]
  },
  {
    "id": "chunk_013",
    "text": "schedule a meeting you need to write some description on what this meeting is about and all of that you can generate using this LLM that you have then you want to create a ticket in IT help desk where you get Wi-Fi credential s the",
    "start_time": "00:03:14.639",
    "end_time": "00:03:32.799",
    "segments": [
      {
        "timestamp": "00:03:14.639 --> 00:03:18.238",
        "text": "schedule a meeting you need to write",
        "start": "00:03:14.639",
        "end": "00:03:18.238"
      },
      {
        "timestamp": "00:03:16.318 --> 00:03:20.639",
        "text": "some description on what this meeting is",
        "start": "00:03:16.318",
        "end": "00:03:20.639"
      },
      {
        "timestamp": "00:03:18.239 --> 00:03:23.680",
        "text": "about and all of that you can generate",
        "start": "00:03:18.239",
        "end": "00:03:23.680"
      },
      {
        "timestamp": "00:03:20.639 --> 00:03:27.439",
        "text": "using this LLM that you have then you",
        "start": "00:03:20.639",
        "end": "00:03:27.439"
      },
      {
        "timestamp": "00:03:23.680 --> 00:03:29.920",
        "text": "want to create a ticket in IT help desk",
        "start": "00:03:23.680",
        "end": "00:03:29.920"
      },
      {
        "timestamp": "00:03:27.439 --> 00:03:32.799",
        "text": "where you get Wi-Fi credential s the",
        "start": "00:03:27.439",
        "end": "00:03:32.799"
      }
    ]
  },
  {
    "id": "chunk_014",
    "text": "email, Slack access, etc. for that particular intern. Again, here you will have uh LLM's role being played as well as you have integration with multiple tools such as Slack, Outlook, u your Wi-Fi system and so on. And then you",
    "start_time": "00:03:29.919",
    "end_time": "00:03:49.759",
    "segments": [
      {
        "timestamp": "00:03:29.919 --> 00:03:35.919",
        "text": "email, Slack access, etc. for that",
        "start": "00:03:29.919",
        "end": "00:03:35.919"
      },
      {
        "timestamp": "00:03:32.799 --> 00:03:39.519",
        "text": "particular intern. Again, here you will",
        "start": "00:03:32.799",
        "end": "00:03:39.519"
      },
      {
        "timestamp": "00:03:35.919 --> 00:03:41.759",
        "text": "have uh LLM's role being played as well",
        "start": "00:03:35.919",
        "end": "00:03:41.759"
      },
      {
        "timestamp": "00:03:39.519 --> 00:03:44.640",
        "text": "as you have integration with multiple",
        "start": "00:03:39.519",
        "end": "00:03:44.640"
      },
      {
        "timestamp": "00:03:41.759 --> 00:03:47.039",
        "text": "tools such as Slack, Outlook, u your",
        "start": "00:03:41.759",
        "end": "00:03:47.039"
      },
      {
        "timestamp": "00:03:44.639 --> 00:03:49.759",
        "text": "Wi-Fi system and so on. And then you",
        "start": "00:03:44.639",
        "end": "00:03:49.759"
      }
    ]
  },
  {
    "id": "chunk_015",
    "text": "want to order a laptop. So you have some kind of you know inventory management system or some kind of uh IT support desk where you can issue ID card order laptop and so on. This is agentic AI folks. It requires multi-step reasoning",
    "start_time": "00:03:47.039",
    "end_time": "00:04:07.438",
    "segments": [
      {
        "timestamp": "00:03:47.039 --> 00:03:51.679",
        "text": "want to order a laptop. So you have some",
        "start": "00:03:47.039",
        "end": "00:03:51.679"
      },
      {
        "timestamp": "00:03:49.759 --> 00:03:54.399",
        "text": "kind of you know inventory management",
        "start": "00:03:49.759",
        "end": "00:03:54.399"
      },
      {
        "timestamp": "00:03:51.680 --> 00:03:57.840",
        "text": "system or some kind of uh IT support",
        "start": "00:03:51.680",
        "end": "00:03:57.840"
      },
      {
        "timestamp": "00:03:54.400 --> 00:04:01.760",
        "text": "desk where you can issue ID card order",
        "start": "00:03:54.400",
        "end": "00:04:01.760"
      },
      {
        "timestamp": "00:03:57.840 --> 00:04:04.959",
        "text": "laptop and so on. This is agentic AI",
        "start": "00:03:57.840",
        "end": "00:04:04.959"
      },
      {
        "timestamp": "00:04:01.759 --> 00:04:07.438",
        "text": "folks. It requires multi-step reasoning",
        "start": "00:04:01.759",
        "end": "00:04:07.438"
      }
    ]
  },
  {
    "id": "chunk_016",
    "text": "and you have to do multi-step planning and in each of these steps LLMs will be involved along with APIs and tools and knowledge and memory and so on. So if you describe a few characteristics of agentic AI system then first one is goal",
    "start_time": "00:04:04.959",
    "end_time": "00:04:24.160",
    "segments": [
      {
        "timestamp": "00:04:04.959 --> 00:04:10.239",
        "text": "and you have to do multi-step planning",
        "start": "00:04:04.959",
        "end": "00:04:10.239"
      },
      {
        "timestamp": "00:04:07.438 --> 00:04:13.519",
        "text": "and in each of these steps LLMs will be",
        "start": "00:04:07.438",
        "end": "00:04:13.519"
      },
      {
        "timestamp": "00:04:10.239 --> 00:04:15.759",
        "text": "involved along with APIs and tools and",
        "start": "00:04:10.239",
        "end": "00:04:15.759"
      },
      {
        "timestamp": "00:04:13.519 --> 00:04:18.639",
        "text": "knowledge and memory and so on. So if",
        "start": "00:04:13.519",
        "end": "00:04:18.639"
      },
      {
        "timestamp": "00:04:15.759 --> 00:04:21.839",
        "text": "you describe a few characteristics of",
        "start": "00:04:15.759",
        "end": "00:04:21.839"
      },
      {
        "timestamp": "00:04:18.639 --> 00:04:24.160",
        "text": "agentic AI system then first one is goal",
        "start": "00:04:18.639",
        "end": "00:04:24.160"
      }
    ]
  },
  {
    "id": "chunk_017",
    "text": "oriented planning you are not giving a task such as tell me how many leaves I have left okay two that is a simple task you are giving here a complex task which requires reasoning as well as multi-step",
    "start_time": "00:04:21.839",
    "end_time": "00:04:40.079",
    "segments": [
      {
        "timestamp": "00:04:21.839 --> 00:04:26.879",
        "text": "oriented planning you are not giving a",
        "start": "00:04:21.839",
        "end": "00:04:26.879"
      },
      {
        "timestamp": "00:04:24.160 --> 00:04:29.840",
        "text": "task such as tell me how many leaves I",
        "start": "00:04:24.160",
        "end": "00:04:29.840"
      },
      {
        "timestamp": "00:04:26.879 --> 00:04:35.319",
        "text": "have left okay two that is a simple task",
        "start": "00:04:26.879",
        "end": "00:04:35.319"
      },
      {
        "timestamp": "00:04:29.839 --> 00:04:38.399",
        "text": "you are giving here a complex task which",
        "start": "00:04:29.839",
        "end": "00:04:38.399"
      },
      {
        "timestamp": "00:04:35.319 --> 00:04:40.079",
        "text": "requires reasoning as well as multi-step",
        "start": "00:04:35.319",
        "end": "00:04:40.079"
      }
    ]
  },
  {
    "id": "chunk_018",
    "text": "planning okay so the first characteristic is goal oriented planning second one is multi step reasoning then autonomous decision making. See this system will send an email it will send uh the invite for the meeting. So all of",
    "start_time": "00:04:38.399",
    "end_time": "00:04:58.639",
    "segments": [
      {
        "timestamp": "00:04:38.399 --> 00:04:43.519",
        "text": "planning okay so the first",
        "start": "00:04:38.399",
        "end": "00:04:43.519"
      },
      {
        "timestamp": "00:04:40.079 --> 00:04:47.039",
        "text": "characteristic is goal oriented planning",
        "start": "00:04:40.079",
        "end": "00:04:47.039"
      },
      {
        "timestamp": "00:04:43.519 --> 00:04:49.599",
        "text": "second one is multi step reasoning then",
        "start": "00:04:43.519",
        "end": "00:04:49.599"
      },
      {
        "timestamp": "00:04:47.040 --> 00:04:52.720",
        "text": "autonomous decision making. See this",
        "start": "00:04:47.040",
        "end": "00:04:52.720"
      },
      {
        "timestamp": "00:04:49.600 --> 00:04:55.520",
        "text": "system will send an email it will send",
        "start": "00:04:49.600",
        "end": "00:04:55.520"
      },
      {
        "timestamp": "00:04:52.720 --> 00:04:58.639",
        "text": "uh the invite for the meeting. So all of",
        "start": "00:04:52.720",
        "end": "00:04:58.639"
      }
    ]
  },
  {
    "id": "chunk_019",
    "text": "that it is doing in a autonomous way. It is not saying okay go to outlook click this button. It is actually doing that work. It is performing actions for you. Then it has access to tools. All these tools okay outlook and HR management system and so on. knowledge which can be",
    "start_time": "00:04:55.519",
    "end_time": "00:05:16.160",
    "segments": [
      {
        "timestamp": "00:04:55.519 --> 00:05:00.719",
        "text": "that it is doing in a autonomous way. It",
        "start": "00:04:55.519",
        "end": "00:05:00.719"
      },
      {
        "timestamp": "00:04:58.639 --> 00:05:02.879",
        "text": "is not saying okay go to outlook click",
        "start": "00:04:58.639",
        "end": "00:05:02.879"
      },
      {
        "timestamp": "00:05:00.720 --> 00:05:05.759",
        "text": "this button. It is actually doing that",
        "start": "00:05:00.720",
        "end": "00:05:05.759"
      },
      {
        "timestamp": "00:05:02.879 --> 00:05:08.560",
        "text": "work. It is performing actions for you.",
        "start": "00:05:02.879",
        "end": "00:05:08.560"
      },
      {
        "timestamp": "00:05:05.759 --> 00:05:10.720",
        "text": "Then it has access to tools. All these",
        "start": "00:05:05.759",
        "end": "00:05:10.720"
      },
      {
        "timestamp": "00:05:08.560 --> 00:05:13.199",
        "text": "tools okay outlook and HR management",
        "start": "00:05:08.560",
        "end": "00:05:13.199"
      },
      {
        "timestamp": "00:05:10.720 --> 00:05:16.160",
        "text": "system and so on. knowledge which can be",
        "start": "00:05:10.720",
        "end": "00:05:16.160"
      }
    ]
  },
  {
    "id": "chunk_020",
    "text": "a PDF files, database and so on. It will also have a memory. So when you are having a conversation, it will have a context, it will remember things. So this is agentic chatboard. Okay. And any AI system that you are building uh which",
    "start_time": "00:05:13.199",
    "end_time": "00:05:32.319",
    "segments": [
      {
        "timestamp": "00:05:13.199 --> 00:05:17.680",
        "text": "a PDF files, database and so on. It will",
        "start": "00:05:13.199",
        "end": "00:05:17.680"
      },
      {
        "timestamp": "00:05:16.160 --> 00:05:19.360",
        "text": "also have a memory. So when you are",
        "start": "00:05:16.160",
        "end": "00:05:19.360"
      },
      {
        "timestamp": "00:05:17.680 --> 00:05:22.720",
        "text": "having a conversation, it will have a",
        "start": "00:05:17.680",
        "end": "00:05:22.720"
      },
      {
        "timestamp": "00:05:19.360 --> 00:05:25.360",
        "text": "context, it will remember things. So",
        "start": "00:05:19.360",
        "end": "00:05:25.360"
      },
      {
        "timestamp": "00:05:22.720 --> 00:05:28.680",
        "text": "this is agentic chatboard. Okay. And any",
        "start": "00:05:22.720",
        "end": "00:05:28.680"
      },
      {
        "timestamp": "00:05:25.360 --> 00:05:32.319",
        "text": "AI system that you are building uh which",
        "start": "00:05:25.360",
        "end": "00:05:32.319"
      }
    ]
  },
  {
    "id": "chunk_021",
    "text": "has uh autonomy, okay, it it has some kind of agency where it can make certain decisions and it can take certain actions on its own. Plus it has multi-step complex reasoning and planning. That system is called agentic",
    "start_time": "00:05:28.680",
    "end_time": "00:05:47.680",
    "segments": [
      {
        "timestamp": "00:05:28.680 --> 00:05:35.120",
        "text": "has uh autonomy, okay, it it has some",
        "start": "00:05:28.680",
        "end": "00:05:35.120"
      },
      {
        "timestamp": "00:05:32.319 --> 00:05:37.038",
        "text": "kind of agency where it can make certain",
        "start": "00:05:32.319",
        "end": "00:05:37.038"
      },
      {
        "timestamp": "00:05:35.120 --> 00:05:40.560",
        "text": "decisions and it can take certain",
        "start": "00:05:35.120",
        "end": "00:05:40.560"
      },
      {
        "timestamp": "00:05:37.038 --> 00:05:42.560",
        "text": "actions on its own. Plus it has",
        "start": "00:05:37.038",
        "end": "00:05:42.560"
      },
      {
        "timestamp": "00:05:40.560 --> 00:05:45.600",
        "text": "multi-step complex reasoning and",
        "start": "00:05:40.560",
        "end": "00:05:45.600"
      },
      {
        "timestamp": "00:05:42.560 --> 00:05:47.680",
        "text": "planning. That system is called agentic",
        "start": "00:05:42.560",
        "end": "00:05:47.680"
      }
    ]
  },
  {
    "id": "chunk_022",
    "text": "AI. If I have to put it in a very simple definition, agentic AI is an AI system that can make decisions and take actions on its own to achieve a goal without being told exactly what to do at every",
    "start_time": "00:05:45.600",
    "end_time": "00:06:03.360",
    "segments": [
      {
        "timestamp": "00:05:45.600 --> 00:05:50.160",
        "text": "AI. If I have to put it in a very simple",
        "start": "00:05:45.600",
        "end": "00:05:50.160"
      },
      {
        "timestamp": "00:05:47.680 --> 00:05:52.639",
        "text": "definition, agentic AI is an AI system",
        "start": "00:05:47.680",
        "end": "00:05:52.639"
      },
      {
        "timestamp": "00:05:50.160 --> 00:05:56.240",
        "text": "that can make decisions and take actions",
        "start": "00:05:50.160",
        "end": "00:05:56.240"
      },
      {
        "timestamp": "00:05:52.639 --> 00:06:01.038",
        "text": "on its own to achieve a goal without",
        "start": "00:05:52.639",
        "end": "00:06:01.038"
      },
      {
        "timestamp": "00:05:56.240 --> 00:06:03.360",
        "text": "being told exactly what to do at every",
        "start": "00:05:56.240",
        "end": "00:06:03.360"
      }
    ]
  },
  {
    "id": "chunk_023",
    "text": "step. Here is a table summarizing the capabilities of all three chatboards. The rack based chatboard is reactive which means more like Q&A. You ask a question it responds but it doesn't have tool usage, reasoning etc. The second",
    "start_time": "00:06:01.038",
    "end_time": "00:06:19.038",
    "segments": [
      {
        "timestamp": "00:06:01.038 --> 00:06:06.079",
        "text": "step. Here is a table summarizing the",
        "start": "00:06:01.038",
        "end": "00:06:06.079"
      },
      {
        "timestamp": "00:06:03.360 --> 00:06:08.639",
        "text": "capabilities of all three chatboards.",
        "start": "00:06:03.360",
        "end": "00:06:08.639"
      },
      {
        "timestamp": "00:06:06.079 --> 00:06:10.560",
        "text": "The rack based chatboard is reactive",
        "start": "00:06:06.079",
        "end": "00:06:10.560"
      },
      {
        "timestamp": "00:06:08.639 --> 00:06:13.120",
        "text": "which means more like Q&A. You ask a",
        "start": "00:06:08.639",
        "end": "00:06:13.120"
      },
      {
        "timestamp": "00:06:10.560 --> 00:06:15.918",
        "text": "question it responds but it doesn't have",
        "start": "00:06:10.560",
        "end": "00:06:15.918"
      },
      {
        "timestamp": "00:06:13.120 --> 00:06:19.038",
        "text": "tool usage, reasoning etc. The second",
        "start": "00:06:13.120",
        "end": "00:06:19.038"
      }
    ]
  },
  {
    "id": "chunk_024",
    "text": "one tool augmented chatboard is reactive and it also has access to tool but it cannot reason plan and be proactive. Whereas agentic AI system has all these characteristics. There are many examples of agentic AI systems. For example, AI",
    "start_time": "00:06:15.918",
    "end_time": "00:06:35.519",
    "segments": [
      {
        "timestamp": "00:06:15.918 --> 00:06:22.639",
        "text": "one tool augmented chatboard is reactive",
        "start": "00:06:15.918",
        "end": "00:06:22.639"
      },
      {
        "timestamp": "00:06:19.038 --> 00:06:25.599",
        "text": "and it also has access to tool but it",
        "start": "00:06:19.038",
        "end": "00:06:25.599"
      },
      {
        "timestamp": "00:06:22.639 --> 00:06:28.918",
        "text": "cannot reason plan and be proactive.",
        "start": "00:06:22.639",
        "end": "00:06:28.918"
      },
      {
        "timestamp": "00:06:25.600 --> 00:06:31.039",
        "text": "Whereas agentic AI system has all these",
        "start": "00:06:25.600",
        "end": "00:06:31.039"
      },
      {
        "timestamp": "00:06:28.918 --> 00:06:33.519",
        "text": "characteristics. There are many examples",
        "start": "00:06:28.918",
        "end": "00:06:33.519"
      },
      {
        "timestamp": "00:06:31.038 --> 00:06:35.519",
        "text": "of agentic AI systems. For example, AI",
        "start": "00:06:31.038",
        "end": "00:06:35.519"
      }
    ]
  },
  {
    "id": "chunk_025",
    "text": "coding. If you're using lovable or replet to create a react native app similar to to-do east okay then see it will first figure out what kind of features to-do list has then it will do",
    "start_time": "00:06:33.519",
    "end_time": "00:06:51.439",
    "segments": [
      {
        "timestamp": "00:06:33.519 --> 00:06:38.478",
        "text": "coding. If you're using lovable or",
        "start": "00:06:33.519",
        "end": "00:06:38.478"
      },
      {
        "timestamp": "00:06:35.519 --> 00:06:41.758",
        "text": "replet to create a react native app",
        "start": "00:06:35.519",
        "end": "00:06:41.758"
      },
      {
        "timestamp": "00:06:38.478 --> 00:06:45.199",
        "text": "similar to to-do east okay then see it",
        "start": "00:06:38.478",
        "end": "00:06:45.199"
      },
      {
        "timestamp": "00:06:41.759 --> 00:06:48.800",
        "text": "will first figure out what kind of",
        "start": "00:06:41.759",
        "end": "00:06:48.800"
      },
      {
        "timestamp": "00:06:45.199 --> 00:06:51.439",
        "text": "features to-do list has then it will do",
        "start": "00:06:45.199",
        "end": "00:06:51.439"
      }
    ]
  },
  {
    "id": "chunk_026",
    "text": "see this kind of multi-step planning and it will then write code execute the code it will debug it fix issues again write code execute it and so on okay so AI coding being done through lovable,",
    "start_time": "00:06:48.800",
    "end_time": "00:07:08.638",
    "segments": [
      {
        "timestamp": "00:06:48.800 --> 00:06:55.439",
        "text": "see this kind of multi-step planning and",
        "start": "00:06:48.800",
        "end": "00:06:55.439"
      },
      {
        "timestamp": "00:06:51.439 --> 00:06:58.639",
        "text": "it will then write code execute the code",
        "start": "00:06:51.439",
        "end": "00:06:58.639"
      },
      {
        "timestamp": "00:06:55.439 --> 00:07:02.399",
        "text": "it will debug it fix issues again write",
        "start": "00:06:55.439",
        "end": "00:07:02.399"
      },
      {
        "timestamp": "00:06:58.639 --> 00:07:05.439",
        "text": "code execute it and so on okay so AI",
        "start": "00:06:58.639",
        "end": "00:07:05.439"
      },
      {
        "timestamp": "00:07:02.399 --> 00:07:08.638",
        "text": "coding being done through lovable,",
        "start": "00:07:02.399",
        "end": "00:07:08.638"
      }
    ]
  },
  {
    "id": "chunk_027",
    "text": "rapit, etc. is an example of an agentic AI system. The other one is travel assistant. You might have a travel assistant where you can say book a 7-day trip to London in May where where the weather is sunny for at least 4 days. This is usually my criteria. You know,",
    "start_time": "00:07:05.439",
    "end_time": "00:07:23.839",
    "segments": [
      {
        "timestamp": "00:07:05.439 --> 00:07:11.519",
        "text": "rapit, etc. is an example of an agentic",
        "start": "00:07:05.439",
        "end": "00:07:11.519"
      },
      {
        "timestamp": "00:07:08.639 --> 00:07:13.038",
        "text": "AI system. The other one is travel",
        "start": "00:07:08.639",
        "end": "00:07:13.038"
      },
      {
        "timestamp": "00:07:11.519 --> 00:07:15.519",
        "text": "assistant. You might have a travel",
        "start": "00:07:11.519",
        "end": "00:07:15.519"
      },
      {
        "timestamp": "00:07:13.038 --> 00:07:18.079",
        "text": "assistant where you can say book a 7-day",
        "start": "00:07:13.038",
        "end": "00:07:18.079"
      },
      {
        "timestamp": "00:07:15.519 --> 00:07:20.560",
        "text": "trip to London in May where where the",
        "start": "00:07:15.519",
        "end": "00:07:20.560"
      },
      {
        "timestamp": "00:07:18.079 --> 00:07:22.079",
        "text": "weather is sunny for at least 4 days.",
        "start": "00:07:18.079",
        "end": "00:07:22.079"
      },
      {
        "timestamp": "00:07:20.560 --> 00:07:23.839",
        "text": "This is usually my criteria. You know,",
        "start": "00:07:20.560",
        "end": "00:07:23.839"
      }
    ]
  },
  {
    "id": "chunk_028",
    "text": "whenever I go anywhere, I want the weather to be sunny. And you have some uh budget uh constraints. So now if you have built agentic AI system, it will first prepare a plan. You know how deepsek creates that plan or any other",
    "start_time": "00:07:22.079",
    "end_time": "00:07:40.318",
    "segments": [
      {
        "timestamp": "00:07:22.079 --> 00:07:26.560",
        "text": "whenever I go anywhere, I want the",
        "start": "00:07:22.079",
        "end": "00:07:26.560"
      },
      {
        "timestamp": "00:07:23.839 --> 00:07:30.638",
        "text": "weather to be sunny. And you have some",
        "start": "00:07:23.839",
        "end": "00:07:30.638"
      },
      {
        "timestamp": "00:07:26.560 --> 00:07:32.879",
        "text": "uh budget uh constraints. So now if you",
        "start": "00:07:26.560",
        "end": "00:07:32.879"
      },
      {
        "timestamp": "00:07:30.639 --> 00:07:35.519",
        "text": "have built agentic AI system, it will",
        "start": "00:07:30.639",
        "end": "00:07:35.519"
      },
      {
        "timestamp": "00:07:32.879 --> 00:07:38.159",
        "text": "first prepare a plan. You know how",
        "start": "00:07:32.879",
        "end": "00:07:38.159"
      },
      {
        "timestamp": "00:07:35.519 --> 00:07:40.318",
        "text": "deepsek creates that plan or any other",
        "start": "00:07:35.519",
        "end": "00:07:40.318"
      }
    ]
  },
  {
    "id": "chunk_029",
    "text": "reasoning model will create a plan. So it will first create a plan then it will execute that plan step by step with the help of all the tools and APIs that you have integrated. In this particular",
    "start_time": "00:07:38.160",
    "end_time": "00:07:56.000",
    "segments": [
      {
        "timestamp": "00:07:38.160 --> 00:07:43.319",
        "text": "reasoning model will create a plan. So",
        "start": "00:07:38.160",
        "end": "00:07:43.319"
      },
      {
        "timestamp": "00:07:40.319 --> 00:07:47.280",
        "text": "it will first create a plan then it will",
        "start": "00:07:40.319",
        "end": "00:07:47.280"
      },
      {
        "timestamp": "00:07:43.319 --> 00:07:50.639",
        "text": "execute that plan step by step with the",
        "start": "00:07:43.319",
        "end": "00:07:50.639"
      },
      {
        "timestamp": "00:07:47.279 --> 00:07:52.478",
        "text": "help of all the tools and APIs that you",
        "start": "00:07:47.279",
        "end": "00:07:52.478"
      },
      {
        "timestamp": "00:07:50.639 --> 00:07:56.000",
        "text": "have integrated. In this particular",
        "start": "00:07:50.639",
        "end": "00:07:56.000"
      }
    ]
  },
  {
    "id": "chunk_030",
    "text": "system, I might have integrated Acue weather API for weather, Xedia API for booking flights and so on. Here is a small example of agentic AI system where you are writing an agent to assist an equity research analyst. They usually",
    "start_time": "00:07:52.478",
    "end_time": "00:08:13.038",
    "segments": [
      {
        "timestamp": "00:07:52.478 --> 00:07:59.439",
        "text": "system, I might have integrated Acue",
        "start": "00:07:52.478",
        "end": "00:07:59.439"
      },
      {
        "timestamp": "00:07:56.000 --> 00:08:01.839",
        "text": "weather API for weather, Xedia API for",
        "start": "00:07:56.000",
        "end": "00:08:01.839"
      },
      {
        "timestamp": "00:07:59.439 --> 00:08:04.800",
        "text": "booking flights and so on. Here is a",
        "start": "00:07:59.439",
        "end": "00:08:04.800"
      },
      {
        "timestamp": "00:08:01.839 --> 00:08:07.918",
        "text": "small example of agentic AI system where",
        "start": "00:08:01.839",
        "end": "00:08:07.918"
      },
      {
        "timestamp": "00:08:04.800 --> 00:08:10.240",
        "text": "you are writing an agent to assist an",
        "start": "00:08:04.800",
        "end": "00:08:10.240"
      },
      {
        "timestamp": "00:08:07.918 --> 00:08:13.038",
        "text": "equity research analyst. They usually",
        "start": "00:08:07.918",
        "end": "00:08:13.038"
      }
    ]
  },
  {
    "id": "chunk_031",
    "text": "write reports on companies. So here you are giving a goal. You are not giving the exit steps. Okay. Write a report on Nvidia. You're also giving it access to y finance tool reasoning tools. You can provide duck duck go search and so on.",
    "start_time": "00:08:10.240",
    "end_time": "00:08:28.639",
    "segments": [
      {
        "timestamp": "00:08:10.240 --> 00:08:14.800",
        "text": "write reports on companies. So here you",
        "start": "00:08:10.240",
        "end": "00:08:14.800"
      },
      {
        "timestamp": "00:08:13.038 --> 00:08:17.598",
        "text": "are giving a goal. You are not giving",
        "start": "00:08:13.038",
        "end": "00:08:17.598"
      },
      {
        "timestamp": "00:08:14.800 --> 00:08:21.120",
        "text": "the exit steps. Okay. Write a report on",
        "start": "00:08:14.800",
        "end": "00:08:21.120"
      },
      {
        "timestamp": "00:08:17.598 --> 00:08:23.680",
        "text": "Nvidia. You're also giving it access to",
        "start": "00:08:17.598",
        "end": "00:08:23.680"
      },
      {
        "timestamp": "00:08:21.120 --> 00:08:26.240",
        "text": "y finance tool reasoning tools. You can",
        "start": "00:08:21.120",
        "end": "00:08:26.240"
      },
      {
        "timestamp": "00:08:23.680 --> 00:08:28.639",
        "text": "provide duck duck go search and so on.",
        "start": "00:08:23.680",
        "end": "00:08:28.639"
      }
    ]
  },
  {
    "id": "chunk_032",
    "text": "And here we are using agno framework. You can just say pip install agno and you can run this code. This code is available in the video description below. Now when I run this, see here I'm using gemini as a model here. And what it will do is it will look at this goal",
    "start_time": "00:08:26.240",
    "end_time": "00:08:47.518",
    "segments": [
      {
        "timestamp": "00:08:26.240 --> 00:08:30.720",
        "text": "And here we are using agno framework.",
        "start": "00:08:26.240",
        "end": "00:08:30.720"
      },
      {
        "timestamp": "00:08:28.639 --> 00:08:32.399",
        "text": "You can just say pip install agno and",
        "start": "00:08:28.639",
        "end": "00:08:32.399"
      },
      {
        "timestamp": "00:08:30.720 --> 00:08:33.680",
        "text": "you can run this code. This code is",
        "start": "00:08:30.720",
        "end": "00:08:33.680"
      },
      {
        "timestamp": "00:08:32.399 --> 00:08:36.799",
        "text": "available in the video description",
        "start": "00:08:32.399",
        "end": "00:08:36.799"
      },
      {
        "timestamp": "00:08:33.679 --> 00:08:40.958",
        "text": "below. Now when I run this, see here I'm",
        "start": "00:08:33.679",
        "end": "00:08:40.958"
      },
      {
        "timestamp": "00:08:36.799 --> 00:08:43.918",
        "text": "using gemini as a model here. And what",
        "start": "00:08:36.799",
        "end": "00:08:43.918"
      },
      {
        "timestamp": "00:08:40.958 --> 00:08:47.518",
        "text": "it will do is it will look at this goal",
        "start": "00:08:40.958",
        "end": "00:08:47.518"
      }
    ]
  },
  {
    "id": "chunk_033",
    "text": "and it will do multi-step reasoning planning and then it will execute those steps. So see here it is doing reasoning. Okay, I need to gather this much information. Here is my reasoning. Then this is the step number two. Compile a report. Uh you need to perform",
    "start_time": "00:08:43.918",
    "end_time": "00:09:03.838",
    "segments": [
      {
        "timestamp": "00:08:43.918 --> 00:08:49.600",
        "text": "and it will do multi-step reasoning",
        "start": "00:08:43.918",
        "end": "00:08:49.600"
      },
      {
        "timestamp": "00:08:47.519 --> 00:08:51.919",
        "text": "planning and then it will execute those",
        "start": "00:08:47.519",
        "end": "00:08:51.919"
      },
      {
        "timestamp": "00:08:49.600 --> 00:08:53.920",
        "text": "steps. So see here it is doing",
        "start": "00:08:49.600",
        "end": "00:08:53.920"
      },
      {
        "timestamp": "00:08:51.919 --> 00:08:56.799",
        "text": "reasoning. Okay, I need to gather this",
        "start": "00:08:51.919",
        "end": "00:08:56.799"
      },
      {
        "timestamp": "00:08:53.919 --> 00:08:58.559",
        "text": "much information. Here is my reasoning.",
        "start": "00:08:53.919",
        "end": "00:08:58.559"
      },
      {
        "timestamp": "00:08:56.799 --> 00:09:02.319",
        "text": "Then this is the step number two.",
        "start": "00:08:56.799",
        "end": "00:09:02.319"
      },
      {
        "timestamp": "00:08:58.559 --> 00:09:03.838",
        "text": "Compile a report. Uh you need to perform",
        "start": "00:08:58.559",
        "end": "00:09:03.838"
      }
    ]
  },
  {
    "id": "chunk_034",
    "text": "all these steps right like getting a company info, analyst recommendation, company news. So it is doing all of that step by step and generating this comprehensive report which has some key statistics for that company. Uh analyst recommendation is one of the common",
    "start_time": "00:09:02.320",
    "end_time": "00:09:20.879",
    "segments": [
      {
        "timestamp": "00:09:02.320 --> 00:09:06.000",
        "text": "all these steps right like getting a",
        "start": "00:09:02.320",
        "end": "00:09:06.000"
      },
      {
        "timestamp": "00:09:03.839 --> 00:09:08.560",
        "text": "company info, analyst recommendation,",
        "start": "00:09:03.839",
        "end": "00:09:08.560"
      },
      {
        "timestamp": "00:09:06.000 --> 00:09:10.639",
        "text": "company news. So it is doing all of that",
        "start": "00:09:06.000",
        "end": "00:09:10.639"
      },
      {
        "timestamp": "00:09:08.559 --> 00:09:13.518",
        "text": "step by step and generating this",
        "start": "00:09:08.559",
        "end": "00:09:13.518"
      },
      {
        "timestamp": "00:09:10.639 --> 00:09:16.958",
        "text": "comprehensive report which has some key",
        "start": "00:09:10.639",
        "end": "00:09:16.958"
      },
      {
        "timestamp": "00:09:13.519 --> 00:09:18.639",
        "text": "statistics for that company. Uh analyst",
        "start": "00:09:13.519",
        "end": "00:09:18.639"
      },
      {
        "timestamp": "00:09:16.958 --> 00:09:20.879",
        "text": "recommendation is one of the common",
        "start": "00:09:16.958",
        "end": "00:09:20.879"
      }
    ]
  },
  {
    "id": "chunk_035",
    "text": "things you'll find in any uh equity research report and recent news as well. I did not say okay have news in the bottom have analyst recommendation and so on. It kind of figured it out on its own. You don't have to always write the",
    "start_time": "00:09:18.639",
    "end_time": "00:09:36.320",
    "segments": [
      {
        "timestamp": "00:09:18.639 --> 00:09:23.600",
        "text": "things you'll find in any uh equity",
        "start": "00:09:18.639",
        "end": "00:09:23.600"
      },
      {
        "timestamp": "00:09:20.879 --> 00:09:26.320",
        "text": "research report and recent news as well.",
        "start": "00:09:20.879",
        "end": "00:09:26.320"
      },
      {
        "timestamp": "00:09:23.600 --> 00:09:28.320",
        "text": "I did not say okay have news in the",
        "start": "00:09:23.600",
        "end": "00:09:28.320"
      },
      {
        "timestamp": "00:09:26.320 --> 00:09:30.879",
        "text": "bottom have analyst recommendation and",
        "start": "00:09:26.320",
        "end": "00:09:30.879"
      },
      {
        "timestamp": "00:09:28.320 --> 00:09:33.360",
        "text": "so on. It kind of figured it out on its",
        "start": "00:09:28.320",
        "end": "00:09:33.360"
      },
      {
        "timestamp": "00:09:30.879 --> 00:09:36.320",
        "text": "own. You don't have to always write the",
        "start": "00:09:30.879",
        "end": "00:09:36.320"
      }
    ]
  },
  {
    "id": "chunk_036",
    "text": "code. You can use low code or no code tools such as Zapier. Here they are showing a cloud integration with their Zapier MCP server and you have connected all these tools and now you're saying like what's on my calendar. It will access the uh calendar tool and it will",
    "start_time": "00:09:33.360",
    "end_time": "00:09:52.160",
    "segments": [
      {
        "timestamp": "00:09:33.360 --> 00:09:38.720",
        "text": "code. You can use low code or no code",
        "start": "00:09:33.360",
        "end": "00:09:38.720"
      },
      {
        "timestamp": "00:09:36.320 --> 00:09:40.879",
        "text": "tools such as Zapier. Here they are",
        "start": "00:09:36.320",
        "end": "00:09:40.879"
      },
      {
        "timestamp": "00:09:38.720 --> 00:09:43.040",
        "text": "showing a cloud integration with their",
        "start": "00:09:38.720",
        "end": "00:09:43.040"
      },
      {
        "timestamp": "00:09:40.879 --> 00:09:44.720",
        "text": "Zapier MCP server and you have connected",
        "start": "00:09:40.879",
        "end": "00:09:44.720"
      },
      {
        "timestamp": "00:09:43.039 --> 00:09:46.319",
        "text": "all these tools and now you're saying",
        "start": "00:09:43.039",
        "end": "00:09:46.319"
      },
      {
        "timestamp": "00:09:44.720 --> 00:09:48.959",
        "text": "like what's on my calendar. It will",
        "start": "00:09:44.720",
        "end": "00:09:48.959"
      },
      {
        "timestamp": "00:09:46.320 --> 00:09:52.160",
        "text": "access the uh calendar tool and it will",
        "start": "00:09:46.320",
        "end": "00:09:52.160"
      }
    ]
  },
  {
    "id": "chunk_037",
    "text": "tell you uh what do you have then you can have some other task. See here it is showing me the calendar items. Then you can say can you tell me more about this particular thing and it will call the appropriate uh tool and it will tell you",
    "start_time": "00:09:48.958",
    "end_time": "00:10:12.000",
    "segments": [
      {
        "timestamp": "00:09:48.958 --> 00:09:55.119",
        "text": "tell you uh what do you have then you",
        "start": "00:09:48.958",
        "end": "00:09:55.119"
      },
      {
        "timestamp": "00:09:52.159 --> 00:09:57.759",
        "text": "can have some other task. See here it is",
        "start": "00:09:52.159",
        "end": "00:09:57.759"
      },
      {
        "timestamp": "00:09:55.120 --> 00:10:00.240",
        "text": "showing me the calendar items. Then you",
        "start": "00:09:55.120",
        "end": "00:10:00.240"
      },
      {
        "timestamp": "00:09:57.759 --> 00:10:02.720",
        "text": "can say can you tell me more about this",
        "start": "00:09:57.759",
        "end": "00:10:02.720"
      },
      {
        "timestamp": "00:10:00.240 --> 00:10:07.919",
        "text": "particular thing and it will call the",
        "start": "00:10:00.240",
        "end": "00:10:07.919"
      },
      {
        "timestamp": "00:10:02.720 --> 00:10:12.000",
        "text": "appropriate uh tool and it will tell you",
        "start": "00:10:02.720",
        "end": "00:10:12.000"
      }
    ]
  },
  {
    "id": "chunk_038",
    "text": "l veo is a CEO at whatever company. Uh these are simple tasks but you can have complex tasks you can use a reasoning model and you can uh design your MCP server such that it can handle those multi-step reasoning process. The other",
    "start_time": "00:10:07.919",
    "end_time": "00:10:27.360",
    "segments": [
      {
        "timestamp": "00:10:07.919 --> 00:10:14.240",
        "text": "l veo is a CEO at whatever company. Uh",
        "start": "00:10:07.919",
        "end": "00:10:14.240"
      },
      {
        "timestamp": "00:10:12.000 --> 00:10:17.519",
        "text": "these are simple tasks but you can have",
        "start": "00:10:12.000",
        "end": "00:10:17.519"
      },
      {
        "timestamp": "00:10:14.240 --> 00:10:21.039",
        "text": "complex tasks you can use a reasoning",
        "start": "00:10:14.240",
        "end": "00:10:21.039"
      },
      {
        "timestamp": "00:10:17.519 --> 00:10:23.839",
        "text": "model and you can uh design your MCP",
        "start": "00:10:17.519",
        "end": "00:10:23.839"
      },
      {
        "timestamp": "00:10:21.039 --> 00:10:25.759",
        "text": "server such that it can handle those",
        "start": "00:10:21.039",
        "end": "00:10:25.759"
      },
      {
        "timestamp": "00:10:23.839 --> 00:10:27.360",
        "text": "multi-step reasoning process. The other",
        "start": "00:10:23.839",
        "end": "00:10:27.360"
      }
    ]
  },
  {
    "id": "chunk_039",
    "text": "tool I want to mention which is similar to Zapier is N8N where you can do drag and drop essentially and see here let's say you are doing create user form submission and then it will trigger this AI agent",
    "start_time": "00:10:25.759",
    "end_time": "00:10:44.000",
    "segments": [
      {
        "timestamp": "00:10:25.759 --> 00:10:29.559",
        "text": "tool I want to mention which is similar",
        "start": "00:10:25.759",
        "end": "00:10:29.559"
      },
      {
        "timestamp": "00:10:27.360 --> 00:10:32.879",
        "text": "to Zapier is",
        "start": "00:10:27.360",
        "end": "00:10:32.879"
      },
      {
        "timestamp": "00:10:29.559 --> 00:10:36.159",
        "text": "N8N where you can do drag and drop",
        "start": "00:10:29.559",
        "end": "00:10:36.159"
      },
      {
        "timestamp": "00:10:32.879 --> 00:10:38.559",
        "text": "essentially and see here let's say you",
        "start": "00:10:32.879",
        "end": "00:10:38.559"
      },
      {
        "timestamp": "00:10:36.159 --> 00:10:40.879",
        "text": "are doing create user form submission",
        "start": "00:10:36.159",
        "end": "00:10:40.879"
      },
      {
        "timestamp": "00:10:38.559 --> 00:10:44.000",
        "text": "and then it will trigger this AI agent",
        "start": "00:10:38.559",
        "end": "00:10:44.000"
      }
    ]
  },
  {
    "id": "chunk_040",
    "text": "which has anthropic chat model it has posgress chat memory it has access to Jira Microsoft enter ID and so on and then you can define these kind of workflows see you can define these kind of workflows and you can create rag",
    "start_time": "00:10:40.879",
    "end_time": "00:10:59.759",
    "segments": [
      {
        "timestamp": "00:10:40.879 --> 00:10:46.799",
        "text": "which has anthropic chat model it has",
        "start": "00:10:40.879",
        "end": "00:10:46.799"
      },
      {
        "timestamp": "00:10:44.000 --> 00:10:49.839",
        "text": "posgress chat memory it has access to",
        "start": "00:10:44.000",
        "end": "00:10:49.839"
      },
      {
        "timestamp": "00:10:46.799 --> 00:10:51.278",
        "text": "Jira Microsoft enter ID and so on and",
        "start": "00:10:46.799",
        "end": "00:10:51.278"
      },
      {
        "timestamp": "00:10:49.839 --> 00:10:53.360",
        "text": "then you can define these kind of",
        "start": "00:10:49.839",
        "end": "00:10:53.360"
      },
      {
        "timestamp": "00:10:51.278 --> 00:10:56.240",
        "text": "workflows see you can define these kind",
        "start": "00:10:51.278",
        "end": "00:10:56.240"
      },
      {
        "timestamp": "00:10:53.360 --> 00:10:59.759",
        "text": "of workflows and you can create rag",
        "start": "00:10:53.360",
        "end": "00:10:59.759"
      }
    ]
  },
  {
    "id": "chunk_041",
    "text": "based system or tool augmented system or even agentic AI. Okay. So agentic for agentic AI this AI agent piece is going to be important. The kind of prompt that you write you can make it solve really",
    "start_time": "00:10:56.240",
    "end_time": "00:11:14.320",
    "segments": [
      {
        "timestamp": "00:10:56.240 --> 00:11:03.039",
        "text": "based system or tool augmented system or",
        "start": "00:10:56.240",
        "end": "00:11:03.039"
      },
      {
        "timestamp": "00:10:59.759 --> 00:11:05.278",
        "text": "even agentic AI. Okay. So agentic for",
        "start": "00:10:59.759",
        "end": "00:11:05.278"
      },
      {
        "timestamp": "00:11:03.039 --> 00:11:08.319",
        "text": "agentic AI this AI agent piece is going",
        "start": "00:11:03.039",
        "end": "00:11:08.319"
      },
      {
        "timestamp": "00:11:05.278 --> 00:11:11.919",
        "text": "to be important. The kind of prompt that",
        "start": "00:11:05.278",
        "end": "00:11:11.919"
      },
      {
        "timestamp": "00:11:08.320 --> 00:11:14.320",
        "text": "you write you can make it solve really",
        "start": "00:11:08.320",
        "end": "00:11:14.320"
      }
    ]
  },
  {
    "id": "chunk_042",
    "text": "complex issues using the reasoning model such as GPT40. You may have this question what is the difference between AI agent and agentic AI? Well, you see this diagram. This is a diagram of an agentic AI system in an ATN. And any",
    "start_time": "00:11:11.919",
    "end_time": "00:11:31.120",
    "segments": [
      {
        "timestamp": "00:11:11.919 --> 00:11:17.360",
        "text": "complex issues using the reasoning model",
        "start": "00:11:11.919",
        "end": "00:11:17.360"
      },
      {
        "timestamp": "00:11:14.320 --> 00:11:18.800",
        "text": "such as GPT40. You may have this",
        "start": "00:11:14.320",
        "end": "00:11:18.800"
      },
      {
        "timestamp": "00:11:17.360 --> 00:11:21.759",
        "text": "question what is the difference between",
        "start": "00:11:17.360",
        "end": "00:11:21.759"
      },
      {
        "timestamp": "00:11:18.799 --> 00:11:24.240",
        "text": "AI agent and agentic AI? Well, you see",
        "start": "00:11:18.799",
        "end": "00:11:24.240"
      },
      {
        "timestamp": "00:11:21.759 --> 00:11:28.480",
        "text": "this diagram. This is a diagram of an",
        "start": "00:11:21.759",
        "end": "00:11:28.480"
      },
      {
        "timestamp": "00:11:24.240 --> 00:11:31.120",
        "text": "agentic AI system in an ATN. And any",
        "start": "00:11:24.240",
        "end": "00:11:31.120"
      }
    ]
  },
  {
    "id": "chunk_043",
    "text": "agentic AI system will have one or more agents. So here you have this one agent. You can have multiple agents. Okay. But you need at least one AI agent with that agentic complex reasoning behavior. The second question you might have is what",
    "start_time": "00:11:28.480",
    "end_time": "00:11:47.120",
    "segments": [
      {
        "timestamp": "00:11:28.480 --> 00:11:34.159",
        "text": "agentic AI system will have one or more",
        "start": "00:11:28.480",
        "end": "00:11:34.159"
      },
      {
        "timestamp": "00:11:31.120 --> 00:11:36.000",
        "text": "agents. So here you have this one agent.",
        "start": "00:11:31.120",
        "end": "00:11:36.000"
      },
      {
        "timestamp": "00:11:34.159 --> 00:11:38.759",
        "text": "You can have multiple agents. Okay. But",
        "start": "00:11:34.159",
        "end": "00:11:38.759"
      },
      {
        "timestamp": "00:11:36.000 --> 00:11:42.320",
        "text": "you need at least one AI agent with that",
        "start": "00:11:36.000",
        "end": "00:11:42.320"
      },
      {
        "timestamp": "00:11:38.759 --> 00:11:44.078",
        "text": "agentic complex reasoning behavior. The",
        "start": "00:11:38.759",
        "end": "00:11:44.078"
      },
      {
        "timestamp": "00:11:42.320 --> 00:11:47.120",
        "text": "second question you might have is what",
        "start": "00:11:42.320",
        "end": "00:11:47.120"
      }
    ]
  },
  {
    "id": "chunk_044",
    "text": "is the difference between Gen AI? Okay, Gen AI versus agentic AI. Well, Genai is part of agentic AI. So you see this Google Gemini model. So this model might generate some text. It might write",
    "start_time": "00:11:44.078",
    "end_time": "00:12:03.200",
    "segments": [
      {
        "timestamp": "00:11:44.078 --> 00:11:52.958",
        "text": "is the difference between Gen AI? Okay,",
        "start": "00:11:44.078",
        "end": "00:11:52.958"
      },
      {
        "timestamp": "00:11:47.120 --> 00:11:55.519",
        "text": "Gen AI versus agentic AI. Well, Genai is",
        "start": "00:11:47.120",
        "end": "00:11:55.519"
      },
      {
        "timestamp": "00:11:52.958 --> 00:11:58.719",
        "text": "part of agentic AI. So you see this",
        "start": "00:11:52.958",
        "end": "00:11:58.719"
      },
      {
        "timestamp": "00:11:55.519 --> 00:12:00.560",
        "text": "Google Gemini model. So this model might",
        "start": "00:11:55.519",
        "end": "00:12:00.560"
      },
      {
        "timestamp": "00:11:58.720 --> 00:12:03.200",
        "text": "generate some text. It might write",
        "start": "00:11:58.720",
        "end": "00:12:03.200"
      }
    ]
  },
  {
    "id": "chunk_045",
    "text": "email. It might summarize something. It will have all those generation capabilities and it is one of the component in your agentic AI system. All right. So generative AI is related to generating new data, text, video, images and so on. And you can have that as a",
    "start_time": "00:12:00.559",
    "end_time": "00:12:19.839",
    "segments": [
      {
        "timestamp": "00:12:00.559 --> 00:12:04.479",
        "text": "email. It might summarize something. It",
        "start": "00:12:00.559",
        "end": "00:12:04.479"
      },
      {
        "timestamp": "00:12:03.200 --> 00:12:06.560",
        "text": "will have all those generation",
        "start": "00:12:03.200",
        "end": "00:12:06.560"
      },
      {
        "timestamp": "00:12:04.480 --> 00:12:09.600",
        "text": "capabilities and it is one of the",
        "start": "00:12:04.480",
        "end": "00:12:09.600"
      },
      {
        "timestamp": "00:12:06.559 --> 00:12:12.638",
        "text": "component in your agentic AI system. All",
        "start": "00:12:06.559",
        "end": "00:12:12.638"
      },
      {
        "timestamp": "00:12:09.600 --> 00:12:14.720",
        "text": "right. So generative AI is related to",
        "start": "00:12:09.600",
        "end": "00:12:14.720"
      },
      {
        "timestamp": "00:12:12.639 --> 00:12:17.278",
        "text": "generating new data, text, video, images",
        "start": "00:12:12.639",
        "end": "00:12:17.278"
      },
      {
        "timestamp": "00:12:14.720 --> 00:12:19.839",
        "text": "and so on. And you can have that as a",
        "start": "00:12:14.720",
        "end": "00:12:19.839"
      }
    ]
  },
  {
    "id": "chunk_046",
    "text": "subcomponent within your agentic AI system. If you want to see some real project examples along with the code for rag and two augmented AI systems then I have two different videos. We have given all the code. See the code for both the projects is here. This is a cold email",
    "start_time": "00:12:17.278",
    "end_time": "00:12:36.560",
    "segments": [
      {
        "timestamp": "00:12:17.278 --> 00:12:21.919",
        "text": "subcomponent within your agentic AI",
        "start": "00:12:17.278",
        "end": "00:12:21.919"
      },
      {
        "timestamp": "00:12:19.839 --> 00:12:23.920",
        "text": "system. If you want to see some real",
        "start": "00:12:19.839",
        "end": "00:12:23.920"
      },
      {
        "timestamp": "00:12:21.919 --> 00:12:26.240",
        "text": "project examples along with the code for",
        "start": "00:12:21.919",
        "end": "00:12:26.240"
      },
      {
        "timestamp": "00:12:23.919 --> 00:12:28.399",
        "text": "rag and two augmented AI systems then I",
        "start": "00:12:23.919",
        "end": "00:12:28.399"
      },
      {
        "timestamp": "00:12:26.240 --> 00:12:30.480",
        "text": "have two different videos. We have given",
        "start": "00:12:26.240",
        "end": "00:12:30.480"
      },
      {
        "timestamp": "00:12:28.399 --> 00:12:32.759",
        "text": "all the code. See the code for both the",
        "start": "00:12:28.399",
        "end": "00:12:32.759"
      },
      {
        "timestamp": "00:12:30.480 --> 00:12:36.560",
        "text": "projects is here. This is a cold email",
        "start": "00:12:30.480",
        "end": "00:12:36.560"
      }
    ]
  },
  {
    "id": "chunk_047",
    "text": "generator and the second one is MCP for that HR le management and also I would suggest you read this building effective agents guide by anthropic. They have mentioned various design patterns. So",
    "start_time": "00:12:32.759",
    "end_time": "00:12:51.199",
    "segments": [
      {
        "timestamp": "00:12:32.759 --> 00:12:39.600",
        "text": "generator and the second one is MCP for",
        "start": "00:12:32.759",
        "end": "00:12:39.600"
      },
      {
        "timestamp": "00:12:36.559 --> 00:12:42.799",
        "text": "that HR le management and also I would",
        "start": "00:12:36.559",
        "end": "00:12:42.799"
      },
      {
        "timestamp": "00:12:39.600 --> 00:12:46.800",
        "text": "suggest you read this building effective",
        "start": "00:12:39.600",
        "end": "00:12:46.800"
      },
      {
        "timestamp": "00:12:42.799 --> 00:12:49.519",
        "text": "agents guide by anthropic. They have",
        "start": "00:12:42.799",
        "end": "00:12:49.519"
      },
      {
        "timestamp": "00:12:46.799 --> 00:12:51.199",
        "text": "mentioned various design patterns. So",
        "start": "00:12:46.799",
        "end": "00:12:51.199"
      }
    ]
  },
  {
    "id": "chunk_048",
    "text": "this is one workflow based design pattern where let's say you have a chatboard and the question might be routed to a technical support team or a sales team or some other team. In that case you can have LLM as a router and then individual LLMs each for sales team",
    "start_time": "00:12:49.519",
    "end_time": "00:13:09.120",
    "segments": [
      {
        "timestamp": "00:12:49.519 --> 00:12:53.200",
        "text": "this is one workflow based design",
        "start": "00:12:49.519",
        "end": "00:12:53.200"
      },
      {
        "timestamp": "00:12:51.200 --> 00:12:55.759",
        "text": "pattern where let's say you have a",
        "start": "00:12:51.200",
        "end": "00:12:55.759"
      },
      {
        "timestamp": "00:12:53.200 --> 00:12:59.278",
        "text": "chatboard and the question might be",
        "start": "00:12:53.200",
        "end": "00:12:59.278"
      },
      {
        "timestamp": "00:12:55.759 --> 00:13:01.838",
        "text": "routed to a technical support team or a",
        "start": "00:12:55.759",
        "end": "00:13:01.838"
      },
      {
        "timestamp": "00:12:59.278 --> 00:13:03.679",
        "text": "sales team or some other team. In that",
        "start": "00:12:59.278",
        "end": "00:13:03.679"
      },
      {
        "timestamp": "00:13:01.839 --> 00:13:06.560",
        "text": "case you can have LLM as a router and",
        "start": "00:13:01.839",
        "end": "00:13:06.560"
      },
      {
        "timestamp": "00:13:03.679 --> 00:13:09.120",
        "text": "then individual LLMs each for sales team",
        "start": "00:13:03.679",
        "end": "00:13:09.120"
      }
    ]
  },
  {
    "id": "chunk_049",
    "text": "technical team and so on. Uh everything is hardwired through code here. So this is a workflow. There is another example of a workflow where uh you perform individual tasks using these LLMs and then you aggregate them. Okay. Uh here",
    "start_time": "00:13:06.559",
    "end_time": "00:13:24.799",
    "segments": [
      {
        "timestamp": "00:13:06.559 --> 00:13:11.919",
        "text": "technical team and so on. Uh everything",
        "start": "00:13:06.559",
        "end": "00:13:11.919"
      },
      {
        "timestamp": "00:13:09.120 --> 00:13:14.159",
        "text": "is hardwired through code here. So this",
        "start": "00:13:09.120",
        "end": "00:13:14.159"
      },
      {
        "timestamp": "00:13:11.919 --> 00:13:16.639",
        "text": "is a workflow. There is another example",
        "start": "00:13:11.919",
        "end": "00:13:16.639"
      },
      {
        "timestamp": "00:13:14.159 --> 00:13:18.879",
        "text": "of a workflow where uh you perform",
        "start": "00:13:14.159",
        "end": "00:13:18.879"
      },
      {
        "timestamp": "00:13:16.639 --> 00:13:21.919",
        "text": "individual tasks using these LLMs and",
        "start": "00:13:16.639",
        "end": "00:13:21.919"
      },
      {
        "timestamp": "00:13:18.879 --> 00:13:24.799",
        "text": "then you aggregate them. Okay. Uh here",
        "start": "00:13:18.879",
        "end": "00:13:24.799"
      }
    ]
  },
  {
    "id": "chunk_050",
    "text": "is another example of orchestrator based workers. This is also a workflow and then comes agents. So for agents see there will be this kind of loop. So action feedback action feedback you know multi-step reasoning multi-step planning. Folks I hope now it is clear",
    "start_time": "00:13:21.919",
    "end_time": "00:13:41.200",
    "segments": [
      {
        "timestamp": "00:13:21.919 --> 00:13:27.278",
        "text": "is another example of orchestrator based",
        "start": "00:13:21.919",
        "end": "00:13:27.278"
      },
      {
        "timestamp": "00:13:24.799 --> 00:13:30.319",
        "text": "workers. This is also a workflow and",
        "start": "00:13:24.799",
        "end": "00:13:30.319"
      },
      {
        "timestamp": "00:13:27.278 --> 00:13:31.919",
        "text": "then comes agents. So for agents see",
        "start": "00:13:27.278",
        "end": "00:13:31.919"
      },
      {
        "timestamp": "00:13:30.320 --> 00:13:34.320",
        "text": "there will be this kind of loop. So",
        "start": "00:13:30.320",
        "end": "00:13:34.320"
      },
      {
        "timestamp": "00:13:31.919 --> 00:13:36.319",
        "text": "action feedback action feedback you know",
        "start": "00:13:31.919",
        "end": "00:13:36.319"
      },
      {
        "timestamp": "00:13:34.320 --> 00:13:38.959",
        "text": "multi-step reasoning multi-step",
        "start": "00:13:34.320",
        "end": "00:13:38.959"
      },
      {
        "timestamp": "00:13:36.320 --> 00:13:41.200",
        "text": "planning. Folks I hope now it is clear",
        "start": "00:13:36.320",
        "end": "00:13:41.200"
      }
    ]
  },
  {
    "id": "chunk_051",
    "text": "what exactly is agentic AI. It's just a jargon. The idea is really simple. Please check video description for the code and other resources.",
    "start_time": "00:13:38.958",
    "end_time": "00:13:48.480",
    "segments": [
      {
        "timestamp": "00:13:38.958 --> 00:13:43.439",
        "text": "what exactly is agentic AI. It's just a",
        "start": "00:13:38.958",
        "end": "00:13:43.439"
      },
      {
        "timestamp": "00:13:41.200 --> 00:13:45.120",
        "text": "jargon. The idea is really simple.",
        "start": "00:13:41.200",
        "end": "00:13:45.120"
      },
      {
        "timestamp": "00:13:43.440 --> 00:13:48.480",
        "text": "Please check video description for the",
        "start": "00:13:43.440",
        "end": "00:13:48.480"
      },
      {
        "timestamp": "00:13:45.120 --> 00:13:48.480",
        "text": "code and other resources.",
        "start": "00:13:45.120",
        "end": "00:13:48.480"
      }
    ]
  }
]